-- COMMON querys
game.last=select * from tbl007_game g where g.id_team_home = %s and g.id_team_away = %s order by g.id desc limit 1
team.name=select * from tbl005_team_club where id = %s
subscriptors.emails=select c.* from tbl040_subscription s, tbl042_contact c where s.id_team_club = %s and s.id = c.id_subscription
team.abrev=select abrev from tbl005_team_club where id = %s
team.players=select pt.* from tbl005_team_club tc, tbl006_player_team pt where tc.id = % and pt.id_team_club = tc.id
player.advaced.stats.by.id=select pt.id, tc2.name, pas.* from tbl006_player_team pt, tbl005_team_club tc, tbl039_player_season_advanced_stats pas, tbl005_team_club tc2 where pt.id_player = %s and pt.id_team_club = tc.id and tc.id_season = %s and pas.id_player_team = pt.id and pas.id_team_club = tc2.id
player.advaced.stats.by.id_player_team=select pas.* from tbl006_player_team pt, tbl039_player_season_advanced_stats pas where pt.id = %s and pas.id_player_team = pt.id
player.standard.stats.by.id=select pt.id, tc2.name, pss.* from tbl006_player_team pt, tbl005_team_club tc, tbl038_player_season_standard_stats pss, tbl005_team_club tc2 where pt.id_player = %s and pt.id_team_club = tc.id and tc.id_season = %s and pss.id_player_team = pt.id and pss.id_team_club = tc2.id
player.standard.stats.by.id_player_team=select pss.* from tbl006_player_team pt, tbl038_player_season_standard_stats pss where pt.id = %s and pss.id_player_team = pt.id
season.name=select s.* from tbl006_player_team pt, tbl005_team_club tc, tbl015_seasons s where pt.id_player = %s and pt.id_team_club = tc.id and tc.id_season = %s and tc.id_season = s.id limit 1
post.game.by.id=select g.id, g.id_team_home as home, tc1.name as home_name, tc1.url_name as home_url, g.id_team_away as away, tc2.name as away_name, tc2.url_name as away_url, g.home_score, g.away_score, g.date_game from tbl007_game g, tbl005_team_club tc1, tbl005_team_club tc2 where g.id = %s and g.id_team_home = tc1.id and g.id_team_away = tc2.id
post.game.by.id.jornada=select g.id, g.id_team_home as home, tc1.name as home_name, tc1.url_name as home_url, g.id_team_away as away, tc2.name as away_name,  tc2.url_name as away_url, g.home_score, g.away_score, g.date_game from tbl007_game g, tbl005_team_club tc1, tbl005_team_club tc2 where g.id_jornada = %s and g.id_team_home = tc1.id and g.id_team_away = tc2.id

---- PreGame
opp.team.std.stats=select * from tbl036_opps_season_standard_stats where id_team_club = %s
player.adv.stats=select pt.numero, p.name, pas.* from tbl039_player_season_advanced_stats pas, tbl006_player_team pt, tbl003_player p where pas.id_team_club = %s and pas.id_player_team = pt.id and pt.id_player = p.id order by pt.id asc
player.std.stats=select pt.numero, p.name, pss.* from tbl038_player_season_standard_stats pss, tbl006_player_team pt, tbl003_player p where pss.id_team_club = %s and pss.id_player_team = pt.id and pt.id_player = p.id order by pt.id asc
team.adv.stats=select tc.name, tc.abrev, tas.* from tbl037_team_season_advanced_stats tas, tbl005_team_club tc  where tc.id = tas.id_team_club and tas.id_team_club = %s
team.std.stats=select tc.name, tc.abrev, tss.* from tbl035_team_season_standard_stats tss, tbl005_team_club tc where tc.id = tss.id_team_club and tss.id_team_club = %s

---- PostGame
team.adv.stats.by.game=select * from tbl009_team_adv_stats tas where tas.id_game = %s and tas.id_team_club = %s
team.std.stats.by.game=select tc.abrev as abrev, tc.name as name, tss.*, round(tss.t2p_conv/tss.t2p_int*100, 2) as t2p_percentage, round(tss.t3p_conv/tss.t3p_int*100, 2) as t3p_percentage, round(tss.tl_conv/tss.tl_int*100, 2) as tl_percentage, (t2p_conv + t3p_conv) as tc_conv, (t2p_int + t3p_int) as tc_int, round((t2p_conv + t3p_conv)/(t2p_int + t3p_int)*100, 2) as tc_percentage, (t2p_conv*2 + t3p_conv*3 + tl_conv) as total_puntos, coalesce(round((sum(t2p_conv)*2 + sum(t3p_conv)*3 + sum(tl_conv))/(sum(t2p_int + t3p_int) + 0.44*sum(tl_int) - sum(reb_of) + sum(turnovers)), 2), 0.00) as pointsbyposs, coalesce(round((sum(t2p_conv)*2 + sum(t3p_conv) * 3 + sum(tl_conv))/(sum(t2p_int) + sum(t3p_int) + sum(tl_int)), 2), 0.00) as ppa, (reb_def + reb_of) as total_rebs, if ((sum(t2p_conv)*2 + sum(t3p_conv)*3 + sum(tl_conv)) = 0, 0.00, coalesce(round(sum(tl_conv)/(sum(t2p_conv)*2 + sum(t3p_conv)*3 + sum(tl_conv))*100, 2), 0.00)) as p_tl_puntos, if ((sum(t2p_conv)*2 + sum(t3p_conv)*3 + sum(tl_conv)) = 0, 0.00, coalesce(round((sum(t2p_conv)*2)/(sum(t2p_conv)*2 + sum(t3p_conv)*3 + sum(tl_conv))*100, 2), 0.00)) as p_t2p_puntos, if ((sum(t2p_conv)*2 + sum(t3p_conv)*3 + sum(tl_conv)) = 0, 0.00, coalesce(round((sum(t3p_conv)*3)/(sum(t2p_conv)*2 + sum(t3p_conv)*3 + sum(tl_conv))*100, 2), 0.00)) as p_t3p_puntos from tbl008_team_std_stats tss, tbl005_team_club tc where tss.id_game = %s and tss.id_team_club = %s and tc.id = tss.id_team_club

---- Monthly
team.std.stats.by.month=select count(*) as games, sum(minutes) as minutes, sum(t2p_conv) as t2p_conv, round(sum(t2p_conv)/count(*), 2) as t2p_conv_pp, sum(t2p_int) as t2p_int, round(sum(t2p_int)/count(*), 2) as t2p_int_pp, round(sum(t2p_conv)/sum(t2p_int)*100, 2) as t2p_percentage, sum(t3p_conv) as t3p_conv, round(sum(t3p_conv)/count(*), 2) as t3p_conv_pp, sum(t3p_int) as t3p_int, round(sum(t3p_int)/count(*), 2) as t3p_int_pp, round(sum(t3p_conv)/sum(t3p_int)*100, 2) as t3p_percentage, sum(t2p_conv + t3p_conv) as tc_conv, round(sum(t2p_conv + t3p_conv)/count(*), 2) as tc_conv_pp, sum(t2p_int + t3p_int) as tc_int, round(sum(t2p_int + t3p_int)/count(*), 2) as tc_int_pp, round(sum(t2p_conv + t3p_conv)/sum(t2p_int + t3p_int)*100, 2) as tc_percentage, sum(tl_conv) as tl_conv, round(sum(tl_conv)/count(*), 2) as tl_conv_pp, sum(tl_int) as tl_int, round(sum(tl_int)/count(*), 2) as tl_int_pp, round(sum(tl_conv)/sum(tl_int)*100, 2) as tl_percentage, sum(t2p_conv)*2 + sum(t3p_conv)*3 + sum(tl_conv) as total_puntos, round(sum(tl_conv)/(sum(t2p_conv)*2 + sum(t3p_conv)*3 + sum(tl_conv))*100, 2) as p_tl_puntos, round((sum(t2p_conv)*2)/(sum(t2p_conv)*2 + sum(t3p_conv)*3 + sum(tl_conv))*100, 2) as p_t2p_puntos, round((sum(t3p_conv)*3)/(sum(t2p_conv)*2 + sum(t3p_conv)*3 + sum(tl_conv))*100, 2) as p_t3p_puntos, round((sum(t2p_conv)*2 + sum(t3p_conv)*3 + sum(tl_conv))/count(*), 2) as total_puntos_pp, coalesce(round((sum(t2p_conv)*2 + sum(t3p_conv) * 3 + sum(tl_conv))/(sum(t2p_int) + sum(t3p_int) + sum(tl_int)), 2), 0.00) as ppa, if ((sum(t2p_int) + sum(t3p_int) + 0.44*sum(tl_int) - sum(reb_of) + sum(turnovers)) = 0, 0.00, round((sum(t2p_conv)*2 + sum(t3p_conv)*3 + sum(tl_conv))/(sum(t2p_int) + sum(t3p_int) + 0.44*sum(tl_int) - sum(reb_of) + sum(turnovers)), 2)) as pointsbyposs, sum(reb_def) as reb_def, round(sum(reb_def)/count(*), 2) as reb_def_pp, sum(reb_of) as reb_of, round(sum(reb_of)/count(*), 2) as reb_of_pp, sum(reb_def + reb_of) as total_rebs, round(sum(reb_def + reb_of)/count(*), 2) as total_rebs_pp, sum(assists) as assists, round(sum(assists)/count(*), 2) as assists_pp, sum(steals) as steals, round(sum(steals)/count(*), 2) as steals_pp, sum(turnovers) as turnovers, round(sum(turnovers)/count(*), 2) as turnovers_pp, sum(block_shots) as block_shots, round(sum(block_shots)/count(*), 2) as block_shots_pp, sum(fouls_cm) as fouls_cm, round(sum(fouls_cm)/count(*), 2) as fouls_cm_pp, sum(fouls_rv) as fouls_rv, round(sum(fouls_rv)/count(*), 2) as fouls_rv_pp, sum(efficience) as efficience, round(sum(efficience)/count(*), 2) as efficience_pp from tbl007_game g, tbl008_team_std_stats tss where (g.id_team_home = %s or g.id_team_away = %s) and year(date(g.date_game)) = %s and month(date(g.date_game))= %s and g.id = tss.id_game and tss.id_team_club = %s
opp.team.std.stats.by.month=select count(*) as games, sum(minutes) as minutes, sum(t2p_conv) as t2p_conv, round(sum(t2p_conv)/count(*), 2) as t2p_conv_pp, sum(t2p_int) as t2p_int, round(sum(t2p_int)/count(*), 2) as t2p_int_pp, round(sum(t2p_conv)/sum(t2p_int)*100, 2) as t2p_percentage, sum(t3p_conv) as t3p_conv, round(sum(t3p_conv)/count(*), 2) as t3p_conv_pp, sum(t3p_int) as t3p_int, round(sum(t3p_int)/count(*), 2) as t3p_int_pp, round(sum(t3p_conv)/sum(t3p_int)*100, 2) as t3p_percentage, sum(t2p_conv + t3p_conv) as tc_conv, round(sum(t2p_conv + t3p_conv)/count(*), 2) as tc_conv_pp, sum(t2p_int + t3p_int) as tc_int, round(sum(t2p_int + t3p_int)/count(*), 2) as tc_int_pp, round(sum(t2p_conv + t3p_conv)/sum(t2p_int + t3p_int)*100, 2) as tc_percentage, sum(tl_conv) as tl_conv, round(sum(tl_conv)/count(*), 2) as tl_conv_pp, sum(tl_int) as tl_int, round(sum(tl_int)/count(*), 2) as tl_int_pp, round(sum(tl_conv)/sum(tl_int)*100, 2) as tl_percentage, sum(t2p_conv)*2 + sum(t3p_conv)*3 + sum(tl_conv) as total_puntos, round(sum(tl_conv)/(sum(t2p_conv)*2 + sum(t3p_conv)*3 + sum(tl_conv))*100, 2) as p_tl_puntos, round((sum(t2p_conv)*2)/(sum(t2p_conv)*2 + sum(t3p_conv)*3 + sum(tl_conv))*100, 2) as p_t2p_puntos, round((sum(t3p_conv)*3)/(sum(t2p_conv)*2 + sum(t3p_conv)*3 + sum(tl_conv))*100, 2) as p_t3p_puntos, round((sum(t2p_conv)*2 + sum(t3p_conv)*3 + sum(tl_conv))/count(*), 2) as total_puntos_pp, coalesce(round((sum(t2p_conv)*2 + sum(t3p_conv) * 3 + sum(tl_conv))/(sum(t2p_int) + sum(t3p_int) + sum(tl_int)), 2), 0.00) as ppa, if ((sum(t2p_int) + sum(t3p_int) + 0.44*sum(tl_int) - sum(reb_of) + sum(turnovers)) = 0, 0.00, round((sum(t2p_conv)*2 + sum(t3p_conv)*3 + sum(tl_conv))/(sum(t2p_int) + sum(t3p_int) + 0.44*sum(tl_int) - sum(reb_of) + sum(turnovers)), 2)) as pointsbyposs, sum(reb_def) as reb_def, round(sum(reb_def)/count(*), 2) as reb_def_pp, sum(reb_of) as reb_of, round(sum(reb_of)/count(*), 2) as reb_of_pp, sum(reb_def + reb_of) as total_rebs, round(sum(reb_def + reb_of)/count(*), 2) as total_rebs_pp, sum(assists) as assists, round(sum(assists)/count(*), 2) as assists_pp, sum(steals) as steals, round(sum(steals)/count(*), 2) as steals_pp, sum(turnovers) as turnovers, round(sum(turnovers)/count(*), 2) as turnovers_pp, sum(block_shots) as block_shots, round(sum(block_shots)/count(*), 2) as block_shots_pp, sum(fouls_cm) as fouls_cm, round(sum(fouls_cm)/count(*), 2) as fouls_cm_pp, sum(fouls_rv) as fouls_rv, round(sum(fouls_rv)/count(*), 2) as fouls_rv_pp, sum(efficience) as efficience, round(sum(efficience)/count(*), 2) as efficience_pp from tbl007_game g, tbl008_team_std_stats tss where (g.id_team_home = %s or g.id_team_away = %s) and year(date(g.date_game)) = %s and month(date(g.date_game))= %s and g.id = tss.id_game and tss.id_team_club <> %s
team.shots.by.month=select st.* from tbl030_shots_chart st, tbl006_player_team pt, tbl007_game g where pt.id_team_club = %s and pt.id = st.id_player_team and st.id_game = g.id and year(date(g.date_game)) = %s and month(date(g.date_game))= %s
opp.shots.by.month=select st.* from tbl030_shots_chart st, tbl006_player_team pt, tbl007_game g where pt.id_team_club <> %s and pt.id = st.id_player_team and st.id_game = g.id and (g.id_team_home = %s or g.id_team_away = %s) and year(date(g.date_game)) = %s and month(date(g.date_game))= %s

---- Accumulated
opp.advanced.stats=select * from tbl043_opps_season_advanced_stats oas where oas.id_team_club = %s
opp.standard.stats=select * from tbl036_opps_season_standard_stats oss where oss.id_team_club = %s
player.name=select * from tbl003_player where id = %s
player.total.points=select pss.total_puntos from tbl038_player_season_standard_stats pss where pss.id_team_club = %s order by pss.id_player_team asc
team.advanced.stats=select * from tbl037_team_season_advanced_stats tas where tas.id_team_club = %s
team.list.games=select date_game, c.name as competition, if(g.id_team_home = %s, 1, 0) as local, tc1.name as home_team, tc2.name as away_team, g.home_score, g.away_score, tss.* from tbl007_game g, tbl005_team_club tc1, tbl005_team_club tc2, tbl008_team_std_stats tss, tbl012_competition c where (g.id_team_home = %s or g.id_team_away = %s) and tc1.id = g.id_team_home and tc2.id = g.id_team_away and tss.id_game = g.id and tss.id_team_club = %s and tss.id_competition = c.id order by date_game asc
team.players=select p.name, pt.* from tbl006_player_team pt, tbl003_player p where pt.id_team_club = %s and pt.id_player = p.id order by pt.id asc
team.standard.stats=select * from tbl035_team_season_standard_stats tss where tss.id_team_club = %s
team.shots=select sc.* from tbl030_shots_chart sc, tbl006_player_team pt where sc.id_player_team = pt.id and pt.id_team_club = %s

-- FEB querys
---- PreGame
feb.players.std.stats=select p.name, pt.numero, s.* from tbl006_player_team pt, tbl003_player p, (select pt.id, count(*) as games, sum(bx.minutes) as minutes, round(sum(bx.minutes)/count(*), 2) as mpp, sum(bx.t2p_conv) as t2p_conv, round(sum(t2p_conv)/count(*), 2) as t2p_conv_pp, sum(bx.t2p_int) as t2p_int, round(sum(bx.t2p_int)/count(*), 2) as t2p_int_pp, if (sum(t2p_int) = 0, 0.00, coalesce(round(sum(bx.t2p_conv)/sum(t2p_int)*100, 2), 0.00)) as t2p_percentage, sum(bx.t3p_conv) as t3p_conv, round(sum(bx.t3p_conv)/count(*), 2) as t3p_conv_pp, sum(bx.t3p_int) as t3p_int, round(sum(bx.t3p_int)/count(*), 2) as t3p_int_pp, if (sum(t3p_int) = 0, 0.00, coalesce(round(sum(bx.t3p_conv)/sum(t3p_int)*100, 2), 0.00)) as t3p_percentage, sum(bx.t2p_conv + bx.t3p_conv) as tc_conv, round(sum(bx.t2p_conv + bx.t3p_conv)/count(*), 2) as tc_conv_pp, sum(bx.t2p_int + bx.t3p_int) as tc_int, round(sum(bx.t2p_int + bx.t3p_int)/count(*), 2) as tc_int_pp, if (sum(bx.t2p_int + bx.t3p_int) = 0, 0.00 , coalesce(round(sum(bx.t2p_conv + bx.t3p_conv)/sum(bx.t2p_int + bx.t3p_int)*100, 2), 0.00)) as tc_percentage, sum(bx.tl_conv) as tl_conv, round(sum(bx.tl_conv)/count(*), 2) as tl_conv_pp, sum(bx.tl_int) as tl_int, round(sum(bx.tl_int)/count(*), 2) as tl_int_pp, if (sum(bx.tl_int) = 0, 0.00, coalesce(round(sum(bx.tl_conv)/sum(bx.tl_int)*100, 2), 0.00)) as tl_percentage, sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv) as total_puntos, if ((sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv)) = 0, 0.00, coalesce(round(sum(bx.tl_conv)/(sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv))*100, 2), 0.00)) as p_tl_puntos, if ((sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv)) = 0, 0.00, coalesce(round((sum(bx.t2p_conv)*2)/(sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv))*100, 2), 0.00)) as p_t2p_puntos, if ((sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv)) = 0, 0.00, coalesce(round((sum(bx.t3p_conv)*3)/(sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv))*100, 2), 0.00)) as p_t3p_puntos, coalesce(round((sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv))/count(*), 2), 0.00) as total_puntos_pp, if ((sum(bx.t2p_int) + sum(bx.t3p_int) + sum(bx.tl_int)) = 0, 0.00, coalesce(round((sum(bx.t2p_conv)*2 + sum(bx.t3p_conv) * 3 + sum(bx.tl_conv))/(sum(bx.t2p_int) + sum(bx.t3p_int) + sum(bx.tl_int)), 2), 0.00)) as ppa, if ((sum(bx.t2p_int + bx.t3p_int) + 0.44*sum(bx.tl_int) - sum(bx.reb_of) + sum(bx.turnovers)) = 0, 0.00, coalesce(round((sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv))/(sum(bx.t2p_int + bx.t3p_int) + 0.44*sum(bx.tl_int) - sum(bx.reb_of) + sum(bx.turnovers)), 2), 0.00)) as pointsbyposs, sum(bx.reb_def) as reb_def, round(sum(bx.reb_def)/count(*), 2) as reb_def_pp, sum(bx.reb_of) as reb_of, round(sum(bx.reb_of)/count(*), 2) as reb_of_pp, sum(bx.reb_def + bx.reb_of) as total_rebs, round(sum(bx.reb_def + bx.reb_of)/count(*), 2) as total_rebs_pp, sum(bx.assists) as assists, round(sum(bx.assists)/count(*), 2) as assists_pp, sum(bx.steals) as steals, round(sum(bx.steals)/count(*), 2) as steals_pp, sum(bx.turnovers) as turnovers, round(sum(bx.turnovers)/count(*), 2) as turnovers_pp, sum(bx.block_shots) as block_shots, round(sum(bx.block_shots)/count(*), 2) as block_shots_pp, sum(bx.fouls_cm) as fouls_cm, round(sum(bx.fouls_cm)/count(*), 2) as fouls_cm_pp, sum(bx.fouls_rv) as fouls_rv, round(sum(bx.fouls_rv)/count(*), 2) as fouls_rv_pp, sum(bx.efficience) as efficience, round(sum(bx.efficience)/count(*), 2) as efficience_pp from tbl005_team_club tc, tbl006_player_team pt, tbl011_boxscore bx where tc.id = %s and tc.id = pt.id_team_club and pt.id = bx.id_player_team group by pt.id) s where s.id = pt.id and pt.id_player = p.id

---- PostGame
feb.players.adv.stats.by.game=select p.name, pas.* from tbl006_player_team pt, tbl003_player p, tbl013_player_adv_stats pas where pt.id_team_club = %s and pt.id_player = p.id and pas.id_game = %s and pas.id_player_team = pt.id
feb.players.std.stats.by.game=select p.name, bx.id_player_team, bx.minutes, bx.t2p_conv, bx.t2p_int, if(bx.t2p_int = 0, 0.00, round(bx.t2p_conv/bx.t2p_int*100, 2)) as t2p_percentage, bx.t3p_conv, bx.t3p_int, if (bx.t3p_int = 0, 0.00, round(bx.t3p_conv/bx.t3p_int*100, 2)) as t3p_percentage, (bx.t2p_conv + bx.t3p_conv) as tc_conv, (bx.t2p_int + bx.t3p_int) as tc_int, if ((bx.t2p_int + bx.t3p_int) = 0, 0.00, round(((bx.t2p_conv + bx.t3p_conv)/(bx.t2p_int + bx.t3p_int)*100), 2)) as tc_percentage, bx.tl_conv, bx.tl_int, if(tl_int = 0, 0.00, round(tl_conv/tl_int*100, 2)) as tl_percentage, (bx.t2p_conv*2 + bx.t3p_conv*3 + bx.tl_conv) as total_puntos, if ((bx.t2p_conv*2 + bx.t3p_conv*3 + bx.tl_conv) = 0, 0.00, round(bx.tl_conv/(bx.t2p_conv*2 + bx.t3p_conv*3 + bx.tl_conv)*100, 2)) as p_tl_puntos, if ((bx.t2p_conv*2 + bx.t3p_conv*3 + bx.tl_conv) = 0, 0.00, round((bx.t2p_conv*2)/((bx.t2p_conv)*2 + (bx.t3p_conv*3) + bx.tl_conv)*100, 2)) as p_t2p_puntos, if ((bx.t2p_conv*2 + bx.t3p_conv*3 + bx.tl_conv) = 0, 0.00, round((bx.t3p_conv*3)/((bx.t2p_conv)*2 + (bx.t3p_conv*3) + bx.tl_conv)*100, 2)) as p_t3p_puntos, if ((bx.t2p_int + bx.t3p_int + bx.tl_int) = 0, 0.00, round((bx.t2p_conv*2 + bx.t3p_conv*3 + bx.tl_conv)/(bx.t2p_int + bx.t3p_int + bx.tl_int), 2)) as ppa, if ((bx.t2p_int + bx.t3p_int + 0.44*bx.tl_int - bx.reb_of + bx.turnovers) = 0, 0.00, round((bx.t2p_conv*2 + bx.t3p_conv*3 + bx.tl_conv)/(bx.t2p_int + bx.t3p_int + 0.44*bx.tl_int - bx.reb_of + bx.turnovers), 2)) as pointsbyposs, bx.reb_def, bx.reb_of, (bx.reb_def + bx.reb_of) as total_rebs, bx.assists, bx.steals, bx.turnovers, bx.block_shots, bx.fouls_cm, bx.fouls_rv, bx.efficience from tbl006_player_team pt, tbl011_boxscore bx, tbl003_player p where pt.id_team_club = %s and bx.id_player_team = pt.id and bx.id_game = %s and pt.id_player = p.id

---- Monthly
feb.players.std.stats.by.month=select p.name, pt.numero, s.* from tbl006_player_team pt, tbl003_player p, (select pt.id, count(*) as games, sum(bx.minutes) as minutes, round(sum(bx.minutes)/count(*), 2) as mpp, sum(bx.t2p_conv) as t2p_conv, round(sum(t2p_conv)/count(*), 2) as t2p_conv_pp, sum(bx.t2p_int) as t2p_int, round(sum(bx.t2p_int)/count(*), 2) as t2p_int_pp, if (sum(t2p_int) = 0, 0.00, coalesce(round(sum(bx.t2p_conv)/sum(t2p_int)*100, 2), 0.00)) as t2p_percentage, sum(bx.t3p_conv) as t3p_conv, round(sum(bx.t3p_conv)/count(*), 2) as t3p_conv_pp, sum(bx.t3p_int) as t3p_int, round(sum(bx.t3p_int)/count(*), 2) as t3p_int_pp, if (sum(t3p_int) = 0, 0.00, coalesce(round(sum(bx.t3p_conv)/sum(t3p_int)*100, 2), 0.00)) as t3p_percentage, sum(bx.t2p_conv + bx.t3p_conv) as tc_conv, round(sum(bx.t2p_conv + bx.t3p_conv)/count(*), 2) as tc_conv_pp, sum(bx.t2p_int + bx.t3p_int) as tc_int, round(sum(bx.t2p_int + bx.t3p_int)/count(*), 2) as tc_int_pp, if (sum(bx.t2p_int + bx.t3p_int) = 0, 0.00 , coalesce(round(sum(bx.t2p_conv + bx.t3p_conv)/sum(bx.t2p_int + bx.t3p_int)*100, 2), 0.00)) as tc_percentage, sum(bx.tl_conv) as tl_conv, round(sum(bx.tl_conv)/count(*), 2) as tl_conv_pp, sum(bx.tl_int) as tl_int, round(sum(bx.tl_int)/count(*), 2) as tl_int_pp, if (sum(bx.tl_int) = 0, 0.00, coalesce(round(sum(bx.tl_conv)/sum(bx.tl_int)*100, 2), 0.00)) as tl_percentage, sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv) as total_puntos, if ((sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv)) = 0, 0.00, coalesce(round(sum(bx.tl_conv)/(sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv))*100, 2), 0.00)) as p_tl_puntos, if ((sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv)) = 0, 0.00, coalesce(round((sum(bx.t2p_conv)*2)/(sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv))*100, 2), 0.00)) as p_t2p_puntos, if ((sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv)) = 0, 0.00, coalesce(round((sum(bx.t3p_conv)*3)/(sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv))*100, 2), 0.00)) as p_t3p_puntos, coalesce(round((sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv))/count(*), 2), 0.00) as total_puntos_pp, if ((sum(bx.t2p_int) + sum(bx.t3p_int) + sum(bx.tl_int)) = 0, 0.00, coalesce(round((sum(bx.t2p_conv)*2 + sum(bx.t3p_conv) * 3 + sum(bx.tl_conv))/(sum(bx.t2p_int) + sum(bx.t3p_int) + sum(bx.tl_int)), 2), 0.00)) as ppa, if ((sum(bx.t2p_int + bx.t3p_int) + 0.44*sum(bx.tl_int) - sum(bx.reb_of) + sum(bx.turnovers)) = 0, 0.00, coalesce(round((sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv))/(sum(bx.t2p_int + bx.t3p_int) + 0.44*sum(bx.tl_int) - sum(bx.reb_of) + sum(bx.turnovers)), 2), 0.00)) as pointsbyposs, sum(bx.reb_def) as reb_def, round(sum(bx.reb_def)/count(*), 2) as reb_def_pp, sum(bx.reb_of) as reb_of, round(sum(bx.reb_of)/count(*), 2) as reb_of_pp, sum(bx.reb_def + bx.reb_of) as total_rebs, round(sum(bx.reb_def + bx.reb_of)/count(*), 2) as total_rebs_pp, sum(bx.assists) as assists, round(sum(bx.assists)/count(*), 2) as assists_pp, sum(bx.steals) as steals, round(sum(bx.steals)/count(*), 2) as steals_pp, sum(bx.turnovers) as turnovers, round(sum(bx.turnovers)/count(*), 2) as turnovers_pp, sum(bx.block_shots) as block_shots, round(sum(bx.block_shots)/count(*), 2) as block_shots_pp, sum(bx.fouls_cm) as fouls_cm, round(sum(bx.fouls_cm)/count(*), 2) as fouls_cm_pp, sum(bx.fouls_rv) as fouls_rv, round(sum(bx.fouls_rv)/count(*), 2) as fouls_rv_pp, sum(bx.efficience) as efficience, round(sum(bx.efficience)/count(*), 2) as efficience_pp from tbl005_team_club tc, tbl006_player_team pt, tbl011_boxscore bx, tbl007_game g where tc.id = %s and (g.id_team_home = %s or g.id_team_away = %s) and year(date(g.date_game)) = %s and month(date(g.date_game))= %s and tc.id = pt.id_team_club and pt.id = bx.id_player_team and bx.id_game = g.id group by pt.id) s where s.id = pt.id and pt.id_player = p.id

-- Shots
feb.team.shots=select st.* from tbl030_shots_chart st, tbl006_player_team pt where pt.id_team_club = %s and pt.id = st.id_player_team
feb.season.shots=select st.* from tbl030_shots_chart st, tbl006_player_team pt, tbl005_team_club tc where st.id_player_team = pt.id and pt.id_team_club = tc.id and tc.id_season = %s
feb.opp.shots=select sc.* from tbl007_game g, tbl030_shots_chart sc, tbl006_player_team pt where (g.id_team_home = %s or g.id_team_away = %s) and sc.id_game = g.id and sc.id_player_team = pt.id and pt.id_team_club <> %s
feb.player.shots=select sc.* from tbl030_shots_chart sc where sc.id_player_team = %s
feb.player.shots.season=select sc.* from tbl006_player_team pt, tbl005_team_club tc, tbl030_shots_chart sc where pt.id_player = %s and pt.id_team_club = tc.id and tc.id_season = %s and sc.id_player_team = pt.id

-- Press
feb.lf1.next.game=select tc1.id as home, tc1.name as home_name, tc1.url_name as home_url, tc2.id as away, tc2.name as away_name, tc2.url_name as away_url, g.date as date_game  from tbl005_team_club tc1, tbl005_team_club tc2, (select * from tbl031_next_gameday_lf1 ng where (ng.id_home_team = %s or ng.id_away_team = %s) and ng.played = 0) g where g.id_home_team = tc1.id and g.id_away_team = tc2.id
feb.lf2.next.game=select tc1.id as home, tc1.name as home_name, tc1.url_name as home_url, tc2.id as away, tc2.name as away_name, tc2.url_name as away_url,  g.date as date_game  from tbl005_team_club tc1, tbl005_team_club tc2, (select * from tbl031_next_gameday_lf2 ng where (ng.id_home_team = %s or ng.id_away_team = %s) and ng.played = 0) g where g.id_home_team = tc1.id and g.id_away_team = tc2.id
feb.lf1.next.gameday=select tc1.id as home, tc1.name as home_name, tc1.url_name as home_url, tc2.id as away, tc2.name as away_name, tc2.url_name as away_url,  g.date as date_game from tbl005_team_club tc1, tbl005_team_club tc2, (select * from tbl031_next_gameday_lf1 ng where ng.played = 0) g where g.id_home_team = tc1.id and g.id_away_team = tc2.id
feb.lf2.next.gameday=select tc1.id as home, tc1.name as home_name, tc1.url_name as home_url, tc2.id as away, tc2.name as away_name, tc2.url_name as away_url,  g.date as date_game from tbl005_team_club tc1, tbl005_team_club tc2, (select * from tbl032_next_gameday_lf2 ng where ng.played = 0) g where g.id_home_team = tc1.id and g.id_away_team = tc2.id

-- FIBA querys
---- PreGame
fiba.players.std.stats=select p.name, pt.numero, s.* from tbl006_player_team pt, tbl003_player p, (select pt.id, count(*) as games, sum(bx.minutes) as minutes, round(sum(bx.minutes)/count(*), 2) as mpp, sum(bx.t2p_conv) as t2p_conv, round(sum(t2p_conv)/count(*), 2) as t2p_conv_pp, sum(bx.t2p_int) as t2p_int, round(sum(bx.t2p_int)/count(*), 2) as t2p_int_pp, if (sum(t2p_int) = 0, 0.00, coalesce(round(sum(bx.t2p_conv)/sum(t2p_int)*100, 2), 0.00)) as t2p_percentage, sum(bx.t3p_conv) as t3p_conv, round(sum(bx.t3p_conv)/count(*), 2) as t3p_conv_pp, sum(bx.t3p_int) as t3p_int, round(sum(bx.t3p_int)/count(*), 2) as t3p_int_pp, if (sum(t3p_int) = 0, 0.00, coalesce(round(sum(bx.t3p_conv)/sum(t3p_int)*100, 2), 0.00)) as t3p_percentage, sum(bx.t2p_conv + bx.t3p_conv) as tc_conv, round(sum(bx.t2p_conv + bx.t3p_conv)/count(*), 2) as tc_conv_pp, sum(bx.t2p_int + bx.t3p_int) as tc_int, round(sum(bx.t2p_int + bx.t3p_int)/count(*), 2) as tc_int_pp, if (sum(bx.t2p_int + bx.t3p_int) = 0, 0.00 , coalesce(round(sum(bx.t2p_conv + bx.t3p_conv)/sum(bx.t2p_int + bx.t3p_int)*100, 2), 0.00)) as tc_percentage, sum(bx.tl_conv) as tl_conv, round(sum(bx.tl_conv)/count(*), 2) as tl_conv_pp, sum(bx.tl_int) as tl_int, round(sum(bx.tl_int)/count(*), 2) as tl_int_pp, if (sum(bx.tl_int) = 0, 0.00, coalesce(round(sum(bx.tl_conv)/sum(bx.tl_int)*100, 2), 0.00)) as tl_percentage, sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv) as total_puntos, if ((sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv)) = 0, 0.00, coalesce(round(sum(bx.tl_conv)/(sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv))*100, 2), 0.00)) as p_tl_puntos, if ((sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv)) = 0, 0.00, coalesce(round((sum(bx.t2p_conv)*2)/(sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv))*100, 2), 0.00)) as p_t2p_puntos, if ((sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv)) = 0, 0.00, coalesce(round((sum(bx.t3p_conv)*3)/(sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv))*100, 2), 0.00)) as p_t3p_puntos, coalesce(round((sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv))/count(*), 2), 0.00) as total_puntos_pp, if ((sum(bx.t2p_int) + sum(bx.t3p_int) + sum(bx.tl_int)) = 0, 0.00, coalesce(round((sum(bx.t2p_conv)*2 + sum(bx.t3p_conv) * 3 + sum(bx.tl_conv))/(sum(bx.t2p_int) + sum(bx.t3p_int) + sum(bx.tl_int)), 2), 0.00)) as ppa, if ((sum(bx.t2p_int + bx.t3p_int) + 0.44*sum(bx.tl_int) - sum(bx.reb_of) + sum(bx.turnovers)) = 0, 0.00, coalesce(round((sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv))/(sum(bx.t2p_int + bx.t3p_int) + 0.44*sum(bx.tl_int) - sum(bx.reb_of) + sum(bx.turnovers)), 2), 0.00)) as pointsbyposs, sum(bx.reb_def) as reb_def, round(sum(bx.reb_def)/count(*), 2) as reb_def_pp, sum(bx.reb_of) as reb_of, round(sum(bx.reb_of)/count(*), 2) as reb_of_pp, sum(bx.reb_def + bx.reb_of) as total_rebs, round(sum(bx.reb_def + bx.reb_of)/count(*), 2) as total_rebs_pp, sum(bx.assists) as assists, round(sum(bx.assists)/count(*), 2) as assists_pp, sum(bx.steals) as steals, round(sum(bx.steals)/count(*), 2) as steals_pp, sum(bx.turnovers) as turnovers, round(sum(bx.turnovers)/count(*), 2) as turnovers_pp, sum(bx.block_shots) as block_shots, round(sum(bx.block_shots)/count(*), 2) as block_shots_pp, sum(bx.fouls_cm) as fouls_cm, round(sum(bx.fouls_cm)/count(*), 2) as fouls_cm_pp, sum(bx.fouls_rv) as fouls_rv, round(sum(bx.fouls_rv)/count(*), 2) as fouls_rv_pp, sum(bx.efficience) as efficience, round(sum(bx.efficience)/count(*), 2) as efficience_pp from tbl005_team_club tc, tbl006_player_team pt, tbl011_boxscore bx where tc.id = %s and tc.id = pt.id_team_club and pt.id = bx.id_pc group by pt.id) s where s.id = pt.id and pt.id_player = p.id
---- PostGame
fiba.players.adv.stats.by.game=select p.name, pas.* from tbl006_player_team pt, tbl003_player p, tbl013_player_adv_stats pas where pt.id_team_club = %s and pt.id_player = p.id and pas.id_game = %s and pas.id_player = pt.id
fiba.players.std.stats.by.game=select p.name, bx.minutes, bx.t2p_conv, bx.t2p_int, if(bx.t2p_int = 0, 0.00, round(bx.t2p_conv/bx.t2p_int*100, 2)) as t2p_percentage, bx.t3p_conv, bx.t3p_int, if (bx.t3p_int = 0, 0.00, round(bx.t3p_conv/bx.t3p_int*100, 2)) as t3p_percentage, (bx.t2p_conv + bx.t3p_conv) as tc_conv, (bx.t2p_int + bx.t3p_int) as tc_int, if ((bx.t2p_int + bx.t3p_int) = 0, 0.00, round(((bx.t2p_conv + bx.t3p_conv)/(bx.t2p_int + bx.t3p_int)*100), 2)) as tc_percentage, bx.tl_conv, bx.tl_int, if(tl_int = 0, 0.00, round(tl_conv/tl_int*100, 2)) as tl_percentage, (bx.t2p_conv*2 + bx.t3p_conv*3 + bx.tl_conv) as total_puntos, if ((bx.t2p_conv*2 + bx.t3p_conv*3 + bx.tl_conv) = 0, 0.00, round(bx.tl_conv/(bx.t2p_conv*2 + bx.t3p_conv*3 + bx.tl_conv)*100, 2)) as p_tl_puntos, if ((bx.t2p_conv*2 + bx.t3p_conv*3 + bx.tl_conv) = 0, 0.00, round((bx.t2p_conv*2)/((bx.t2p_conv)*2 + (bx.t3p_conv*3) + bx.tl_conv)*100, 2)) as p_t2p_puntos, if ((bx.t2p_conv*2 + bx.t3p_conv*3 + bx.tl_conv) = 0, 0.00, round((bx.t3p_conv*3)/((bx.t2p_conv)*2 + (bx.t3p_conv*3) + bx.tl_conv)*100, 2)) as p_t3p_puntos, if ((bx.t2p_int + bx.t3p_int + bx.tl_int) = 0, 0.00, round((bx.t2p_conv*2 + bx.t3p_conv*3 + bx.tl_conv)/(bx.t2p_int + bx.t3p_int + bx.tl_int), 2)) as ppa, if ((bx.t2p_int + bx.t3p_int + 0.44*bx.tl_int - bx.reb_of + bx.turnovers) = 0, 0.00, round((bx.t2p_conv*2 + bx.t3p_conv*3 + bx.tl_conv)/(bx.t2p_int + bx.t3p_int + 0.44*bx.tl_int - bx.reb_of + bx.turnovers), 2)) as pointsbyposs, bx.reb_def, bx.reb_of, bx.assists, bx.steals, bx.turnovers, bx.block_shots, bx.fouls_cm, bx.fouls_rv, bx.efficience from tbl006_player_team pt, tbl011_boxscore bx, tbl003_player p where pt.id_team_club = %s and bx.id_pc = pt.id and bx.id_game = %s and pt.id_player = p.id
---- Monthly
fiba.players.std.stats.by.month=select p.name, pt.numero, s.* from tbl006_player_team pt, tbl003_player p, (select pt.id, count(*) as games, sum(bx.minutes) as minutes, round(sum(bx.minutes)/count(*), 2) as mpp, sum(bx.t2p_conv) as t2p_conv, round(sum(t2p_conv)/count(*), 2) as t2p_conv_pp, sum(bx.t2p_int) as t2p_int, round(sum(bx.t2p_int)/count(*), 2) as t2p_int_pp, if (sum(t2p_int) = 0, 0.00, coalesce(round(sum(bx.t2p_conv)/sum(t2p_int)*100, 2), 0.00)) as t2p_percentage, sum(bx.t3p_conv) as t3p_conv, round(sum(bx.t3p_conv)/count(*), 2) as t3p_conv_pp, sum(bx.t3p_int) as t3p_int, round(sum(bx.t3p_int)/count(*), 2) as t3p_int_pp, if (sum(t3p_int) = 0, 0.00, coalesce(round(sum(bx.t3p_conv)/sum(t3p_int)*100, 2), 0.00)) as t3p_percentage, sum(bx.t2p_conv + bx.t3p_conv) as tc_conv, round(sum(bx.t2p_conv + bx.t3p_conv)/count(*), 2) as tc_conv_pp, sum(bx.t2p_int + bx.t3p_int) as tc_int, round(sum(bx.t2p_int + bx.t3p_int)/count(*), 2) as tc_int_pp, if (sum(bx.t2p_int + bx.t3p_int) = 0, 0.00 , coalesce(round(sum(bx.t2p_conv + bx.t3p_conv)/sum(bx.t2p_int + bx.t3p_int)*100, 2), 0.00)) as tc_percentage, sum(bx.tl_conv) as tl_conv, round(sum(bx.tl_conv)/count(*), 2) as tl_conv_pp, sum(bx.tl_int) as tl_int, round(sum(bx.tl_int)/count(*), 2) as tl_int_pp, if (sum(bx.tl_int) = 0, 0.00, coalesce(round(sum(bx.tl_conv)/sum(bx.tl_int)*100, 2), 0.00)) as tl_percentage, sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv) as total_puntos, if ((sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv)) = 0, 0.00, coalesce(round(sum(bx.tl_conv)/(sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv))*100, 2), 0.00)) as p_tl_puntos, if ((sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv)) = 0, 0.00, coalesce(round((sum(bx.t2p_conv)*2)/(sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv))*100, 2), 0.00)) as p_t2p_puntos, if ((sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv)) = 0, 0.00, coalesce(round((sum(bx.t3p_conv)*3)/(sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv))*100, 2), 0.00)) as p_t3p_puntos, coalesce(round((sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv))/count(*), 2), 0.00) as total_puntos_pp, if ((sum(bx.t2p_int) + sum(bx.t3p_int) + sum(bx.tl_int)) = 0, 0.00, coalesce(round((sum(bx.t2p_conv)*2 + sum(bx.t3p_conv) * 3 + sum(bx.tl_conv))/(sum(bx.t2p_int) + sum(bx.t3p_int) + sum(bx.tl_int)), 2), 0.00)) as ppa, if ((sum(bx.t2p_int + bx.t3p_int) + 0.44*sum(bx.tl_int) - sum(bx.reb_of) + sum(bx.turnovers)) = 0, 0.00, coalesce(round((sum(bx.t2p_conv)*2 + sum(bx.t3p_conv)*3 + sum(bx.tl_conv))/(sum(bx.t2p_int + bx.t3p_int) + 0.44*sum(bx.tl_int) - sum(bx.reb_of) + sum(bx.turnovers)), 2), 0.00)) as pointsbyposs, sum(bx.reb_def) as reb_def, round(sum(bx.reb_def)/count(*), 2) as reb_def_pp, sum(bx.reb_of) as reb_of, round(sum(bx.reb_of)/count(*), 2) as reb_of_pp, sum(bx.reb_def + bx.reb_of) as total_rebs, round(sum(bx.reb_def + bx.reb_of)/count(*), 2) as total_rebs_pp, sum(bx.assists) as assists, round(sum(bx.assists)/count(*), 2) as assists_pp, sum(bx.steals) as steals, round(sum(bx.steals)/count(*), 2) as steals_pp, sum(bx.turnovers) as turnovers, round(sum(bx.turnovers)/count(*), 2) as turnovers_pp, sum(bx.block_shots) as block_shots, round(sum(bx.block_shots)/count(*), 2) as block_shots_pp, sum(bx.fouls_cm) as fouls_cm, round(sum(bx.fouls_cm)/count(*), 2) as fouls_cm_pp, sum(bx.fouls_rv) as fouls_rv, round(sum(bx.fouls_rv)/count(*), 2) as fouls_rv_pp, sum(bx.efficience) as efficience, round(sum(bx.efficience)/count(*), 2) as efficience_pp from tbl005_team_club tc, tbl006_player_team pt, tbl011_boxscore bx, tbl007_game g where tc.id = %s and (g.id_team_home = %s or g.id_team_away = %s) and year(date(g.date_game)) = %s and month(date(g.date_game))= %s and tc.id = pt.id_team_club and pt.id = bx.id_pc and bx.id_game = g.id group by pt.id) s where s.id = pt.id and pt.id_player = p.id

-- Shots
fiba.team.shots=select st.* from tbl030_shots_chart st, tbl006_player_team pt where pt.id_team_club = %s and pt.id_player_feb = st.id_fiba
fiba.season.shots=select st.* from tbl030_shots_chart st, tbl006_player_team pt, tbl005_team_club tc where st.id_fiba = pt.id_player_feb and pt.id_team_club = tc.id and tc.id_season = %s
fiba.opp.shots=select sc.* from tbl007_game g, tbl030_shots_chart sc, tbl006_player_team pt where (g.id_team_home = %s or g.id_team_away = %s) and sc.id_game = g.id and sc.id_fiba = pt.id_player_feb and pt.id_team_club <> %s
fiba.player.shots=select sc.* from tbl006_player_team pt, tbl030_shots_chart sc, tbl007_game g, tbl004_jornada j, tbl012_competition c where pt.id = %s and pt.id_player_feb = sc.id_fiba and sc.id_game = g.id and g.id_jornada = j.id and j.id_competition = c.id and c.id_season = %s

-- Press_
fiba.euroleague.next.game=select tc1.id as home, tc1.name as home_name, tc1.url_name as home_url, tc2.id as away, tc2.name as away_name, tc2.url_name as away_url, g.date as date_game  from tbl005_team_club tc1, tbl005_team_club tc2, (select * from tbl031_next_game_euroleague ng where (ng.id_home_team = %s or ng.id_away_team = %s) and ng.played = 0) g where g.id_home_team = tc1.id and g.id_away_team = tc2.id
fiba.eurocup.next.game=select tc1.id as home, tc1.name as home_name, tc1.url_name as home_url, tc2.id as away, tc2.name as away_name, tc2.url_name as away_url, g.date as date_game  from tbl005_team_club tc1, tbl005_team_club tc2, (select * from tbl032_next_game_eurocup ng where (ng.id_home_team = %s or ng.id_away_team = %s) and ng.played = 0) g where g.id_home_team = tc1.id and g.id_away_team = tc2.id
fiba.euroleague.next.gameday=select tc1.id as home, tc1.name as home_name, tc1.url_name as home_url, tc2.id as away, tc2.name as away_name, tc2.url_name as away_url, g.date as date_game from tbl005_team_club tc1, tbl005_team_club tc2, (select * from tbl031_next_game_euroleague ng where ng.played = 0) g where g.id_home_team = tc1.id and g.id_away_team = tc2.id
fiba.eurocup.next.gameday=select tc1.id as home, tc1.name as home_name, tc1.url_name as home_url, tc2.id as away, tc2.name as away_name, tc2.url_name as away_url, g.date as date_game from tbl005_team_club tc1, tbl005_team_club tc2, (select * from tbl032_next_game_eurocup ng where ng.played = 0) g where g.id_home_team = tc1.id and g.id_away_team = tc2.id
