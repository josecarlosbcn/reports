from reports.pdf.pdf_file import PDFFile
from constants import PDFK, COMPETITIONS,IMAGES
import locale
from decimal import Decimal
from com.graphics.doublebar_chart_plot import MultiBarChatPlot
import os
from com.graphics.bar_chart_plot import BarChartPlot


class PDFPreGame(PDFFile):
    def __init__(self, params, data_pre_game):
        super().__init__(params)
        self.dpg = data_pre_game
        #Creamos página principal
        self.cover()
        #Creamos página comparativa de estadísticas
        print("PDFPreGame:: Creando página comparativa de estadísticas estándar")
        self.create_page("Comparativa de estadísticas estándar")
        self.page_standard_stats(params, self.dpg.home_standard_stats, self.dpg.away_standard_stats)
        print("PDFPreGame:: Creando página comparativa de estadísticas avanzadas")
        self.create_page("Comparativa de estadísticas avanzadas")
        self.page_advanced_stats(params, data_pre_game)
        #Carta de tiro de equipo
        print("PDFPreGame:: Creando carta de tiro del equipo rival")
        rival_name = params["away_team"] if params["destiny"] == params["home"] else params["home_team"]
        if params["competition"] != COMPETITIONS.LF2:
            self.create_page(f"Carta de tiro: {rival_name}")
            rival_ss = self.dpg.home_standard_stats[0] if params["home"] != params["destiny"] else self.dpg.away_standard_stats[0]
            self.shot_chart_team(rival_ss['tc_int'])
        print("PDFPreGame:: Creando página con gráficas comparativas entre equipos")
        self.create_page("Gráficas comparativas entre equipos 1/2")
        self.page_team_graphics_1(self.dpg.home_standard_stats, self.dpg.away_standard_stats)
        self.create_page("Gráficas comparativas entre equipos 2/2")
        self.page_team_graphics_2(self.dpg.home_standard_stats, self.dpg.away_standard_stats, self.dpg.home_advanced_stats, self.dpg.away_advanced_stats)
        #Estadísticas de jugadoras y cartas de tiro de jugadoras
        print("PDFPreGame:: Creando páginas de estadísticas y carta de tiro de jugadoras")
        self.players_page(params)
        #Gráficas de jugadoras
        self.create_page("Gráficas comparativas entre jugadoras")
        self.page_player_graphics()
        #Glosario
        print("PDFPreGame:: Creando glosario")
        self.create_page("Glosario 1/2")
        self.page_glosario_1()
        self.create_page("Glosario 2/2")
        self.page_glosario_2()
        #Guardamos archivo
        print("PDFPreGame:: Vamos a guardar PDF")
        self.save_pdf(params)

    def set_title_cover(self):
        self.pdf.set_font('Arial', 'B', 32)
        #self.pdf.cell(PDFK.A4_WIDTH, PDFK.A4_HEIGHT/2, team_name, border = 0, align = "C")
        #self.pdf.set_text_color(4, 52, 116)
        self.pdf.text(PDFK.LANDSCAPE_A4_WIDTH/2 - self.pdf.get_string_width(self.params["home_team"])/2, PDFK.LANDSCAPE_A4_HEIGHT/2 - 96, self.params["home_team"])
        self.pdf.text(PDFK.LANDSCAPE_A4_WIDTH/2 - self.pdf.get_string_width("vs")/2, PDFK.LANDSCAPE_A4_HEIGHT/2 - 60, "vs")
        self.pdf.text(PDFK.LANDSCAPE_A4_WIDTH/2 - self.pdf.get_string_width(self.params["away_team"])/2, PDFK.LANDSCAPE_A4_HEIGHT/2 - 24, self.params["away_team"])

    def set_type_inform_cover(self):
        self.pdf.set_font('Arial', 'B', 24)
        self.pdf.text(PDFK.LANDSCAPE_A4_WIDTH/2 - self.pdf.get_string_width("Informe pre-partido")/2, PDFK.LANDSCAPE_A4_HEIGHT/2 + 50, "Informe pre-partido")

    # def page_standard_stats(self, params):
    #     locale.setlocale(locale.LC_ALL, 'es_ES.utf8')
    #     #print (str( locale.getlocale() ))
    #     away = params["away_team"]
    #     home = params["home_team"]
    #     print(f"object: {self.dpg.away_standard_stats}")
    #     away_ss = self.dpg.away_standard_stats[0]
    #     home_ss = self.dpg.home_standard_stats[0]
    #     #Tabla Estadísticas de tiro
    #     self.pdf.set_font("Arial", "B", 14)
    #     self.pdf.set_y(75)
    #     self.pdf.cell(self.pdf.get_string_width("Estadísticas de tiro totales") + 5, 15, "Estadísticas de tiro totales", "B: 1", 1, "L")
    #     #Cabecera
    #     self.pdf.set_font("Arial", "B", 10)
    #     self.pdf.set_y(100)
    #     self.pdf.set_fill_color(225, 225, 225)
    #     self.pdf.cell(200, 20, "EQUIPOS", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "T2PC", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "T2PI", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "T2P%", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "T3PC", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "T3PI", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "T3P%", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "TCC", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "TCI", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "TC%", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "TLC", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "TLI", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "TL%", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "PTOS", 1, 0, "C", 1)
    #     #Fila equipo local
    #     self.pdf.set_y(120)
    #     self.pdf.set_font("Arial", "B", 10)
    #     self.pdf.cell(200, 20, home.title(), 1, 0, "L", 1)
    #     self.pdf.set_font("Arial", "", 10)
    #     self.pdf.cell(40, 20, str(home_ss["t2p_conv"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(home_ss["t2p_int"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(home_ss["t2p_percentage"])) + "%", 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(home_ss["t3p_conv"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(home_ss["t3p_int"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(home_ss["t3p_percentage"])) + "%", 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(home_ss["tc_conv"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(home_ss["tc_int"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(home_ss["tc_percentage"])) + "%", 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(home_ss["tl_conv"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(home_ss["tl_int"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(home_ss["tl_percentage"])) + "%", 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(home_ss["total_puntos"]), 1, 0, "C", 0)
    #     #Fila equipo visitante
    #     self.pdf.set_y(140)
    #     self.pdf.set_font("Arial", "B", 10)
    #     self.pdf.cell(200, 20, away.title(), 1, 0, "L", 1)
    #     self.pdf.set_font("Arial", "", 10)
    #     self.pdf.cell(40, 20, str(away_ss["t2p_conv"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(away_ss["t2p_int"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(away_ss["t2p_percentage"])) + "%", 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(away_ss["t3p_conv"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(away_ss["t3p_int"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(away_ss["t3p_percentage"])) + "%", 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(away_ss["tc_conv"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(away_ss["tc_int"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(away_ss["tc_percentage"])) + "%", 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(away_ss["tl_conv"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(away_ss["tl_int"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(away_ss["tl_percentage"])) + "%", 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(away_ss["total_puntos"]), 1, 0, "C", 0)
    #     #Estadísticas de tiro por partido
    #     self.pdf.set_font("Arial", "B", 14)
    #     self.pdf.set_y(180)
    #     self.pdf.cell(self.pdf.get_string_width("Estadísticas de tiro por partido") + 5, 15, "Estadísticas de tiro por partido", "B: 1", 1, "L")
    #     self.pdf.set_font("Arial", "B", 14)
    #     #Cabecera
    #     self.pdf.set_font("Arial", "B", 10)
    #     self.pdf.set_y(205)
    #     self.pdf.set_fill_color(225, 225, 225)
    #     self.pdf.cell(200, 20, "EQUIPOS", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "T2PC", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "T2PI", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "T2P%", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "T3PC", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "T3PI", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "T3P%", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "TCC", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "TCI", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "TC%", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "TLC", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "TLI", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "TL%", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "PTOS", 1, 0, "C", 1)
    #     #Fila equipo local
    #     self.pdf.set_y(225)
    #     self.pdf.set_font("Arial", "B", 10)
    #     self.pdf.cell(200, 20, home.title(), 1, 0, "L", 1)
    #     self.pdf.set_font("Arial", "", 10)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(home_ss["t2p_conv_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(home_ss["t2p_int_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(home_ss["t2p_percentage"])) + "%", 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(home_ss["t3p_conv_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(home_ss["t3p_int_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(home_ss["t3p_percentage"])) + "%", 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(home_ss["tc_conv_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(home_ss["tc_int_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(home_ss["tc_percentage"])) + "%", 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(home_ss["tl_conv_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(home_ss["tl_int_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(home_ss["tl_percentage"])) + "%", 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(home_ss["total_puntos_pp"])), 1, 0, "C", 0)
    #     #Fila equipo visitante
    #     self.pdf.set_y(245)
    #     self.pdf.set_font("Arial", "B", 10)
    #     self.pdf.cell(200, 20, away.title(), 1, 0, "L", 1)
    #     self.pdf.set_font("Arial", "", 10)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(away_ss["t2p_conv_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(away_ss["t2p_int_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(away_ss["t2p_percentage"])) + "%", 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(away_ss["t3p_conv_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(away_ss["t3p_int_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(away_ss["t3p_percentage"])) + "%", 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(away_ss["tc_conv_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(away_ss["tc_int_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(away_ss["tc_percentage"])) + "%", 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(away_ss["tl_conv_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(away_ss["tl_int_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(away_ss["tl_percentage"])) + "%", 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(away_ss["total_puntos_pp"])), 1, 0, "C", 0)
    #     #Estadísticas de rebotes
    #     self.pdf.set_font("Arial", "B", 14)
    #     self.pdf.set_y(285)
    #     self.pdf.cell(self.pdf.get_string_width("Estadísticas de rebote totales y por partido") + 5, 15, "Estadísticas de rebote totales y por partido", "B: 1", 1, "L")
    #     self.pdf.set_font("Arial", "B", 14)
    #     #Cabecera
    #     self.pdf.set_font("Arial", "B", 10)
    #     self.pdf.set_y(310)
    #     self.pdf.set_fill_color(225, 225, 225)
    #     self.pdf.cell(200, 20, "EQUIPOS", 1, 0, "C", 1)
    #     self.pdf.cell(60, 20, "RD", 1, 0, "C", 1)
    #     self.pdf.cell(60, 20, "RD/P", 1, 0, "C", 1)
    #     self.pdf.cell(60, 20, "RO", 1, 0, "C", 1)
    #     self.pdf.cell(60, 20, "RO/P", 1, 0, "C", 1)
    #     self.pdf.cell(60, 20, "TR", 1, 0, "C", 1)
    #     self.pdf.cell(60, 20, "TR/P", 1, 0, "C", 1)
    #     #Fila equipo rival
    #     self.pdf.set_y(330)
    #     self.pdf.set_font("Arial", "B", 10)
    #     self.pdf.cell(200, 20, home.title(), 1, 0, "L", 1)
    #     self.pdf.set_font("Arial", "", 10)
    #     self.pdf.cell(60, 20, str(home_ss["reb_def"]), 1, 0, "C", 0)
    #     self.pdf.cell(60, 20, self.locale_format(Decimal(home_ss["reb_def_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(60, 20, str(home_ss["reb_of"]), 1, 0, "C", 0)
    #     self.pdf.cell(60, 20, self.locale_format(Decimal(home_ss["reb_of_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(60, 20, str(home_ss["total_rebs"]), 1, 0, "C", 0)
    #     self.pdf.cell(60, 20, self.locale_format(Decimal(home_ss["total_rebs_pp"])), 1, 0, "C", 0)
    #     #Fila equipo
    #     self.pdf.set_y(350)
    #     self.pdf.set_font("Arial", "B", 10)
    #     self.pdf.cell(200, 20, away.title(), 1, 0, "L", 1)
    #     self.pdf.set_font("Arial", "", 10)
    #     self.pdf.cell(60, 20, str(away_ss["reb_def"]), 1, 0, "C", 0)
    #     self.pdf.cell(60, 20, self.locale_format(Decimal(away_ss["reb_def_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(60, 20, str(away_ss["reb_of"]), 1, 0, "C", 0)
    #     self.pdf.cell(60, 20, self.locale_format(Decimal(away_ss["reb_of_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(60, 20, str(away_ss["total_rebs"]), 1, 0, "C", 0)
    #     self.pdf.cell(60, 20, self.locale_format(Decimal(away_ss["total_rebs_pp"])), 1, 0, "C", 0)
    #     #Otras estadísticas
    #     self.pdf.set_font("Arial", "B", 14)
    #     self.pdf.set_y(390)
    #     self.pdf.cell(self.pdf.get_string_width("Otras estadísticas totales y por partido") + 5, 15, "Otras estadísticas totales y por partido", "B: 1", 1, "L")
    #     self.pdf.set_font("Arial", "B", 14)
    #     #Cabecera
    #     self.pdf.set_font("Arial", "B", 10)
    #     self.pdf.set_y(415)
    #     self.pdf.set_fill_color(225, 225, 225)
    #     self.pdf.cell(200, 20, "EQUIPOS", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "AS", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "AS/P", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "BR", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "BR/P", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "BP", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "BP/P", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "TP", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "TP/P", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "FC", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "FC/P", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "FR", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "FR/P", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "VAL.", 1, 0, "C", 1)
    #     self.pdf.cell(40, 20, "VAL./P", 1, 0, "C", 1)
    #     #Fila equipo local
    #     self.pdf.set_y(435)
    #     self.pdf.set_font("Arial", "B", 10)
    #     self.pdf.cell(200, 20, home.title(), 1, 0, "L", 1)
    #     self.pdf.set_font("Arial", "", 10)
    #     self.pdf.cell(40, 20, str(home_ss["assists"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(home_ss["assists_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(home_ss["steals"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(home_ss["steals_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(home_ss["turnovers"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(home_ss["turnovers_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(home_ss["block_shots"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(home_ss["block_shots_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(home_ss["fouls_cm"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(home_ss["fouls_cm_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(home_ss["fouls_rv"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(home_ss["fouls_rv_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(home_ss["efficience"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(home_ss["efficience_pp"])), 1, 0, "C", 0)
    #     #Fila equipo visitante
    #     self.pdf.set_y(455)
    #     self.pdf.set_font("Arial", "B", 10)
    #     self.pdf.cell(200, 20, away.title(), 1, 0, "L", 1)
    #     self.pdf.set_font("Arial", "", 10)
    #     self.pdf.cell(40, 20, str(away_ss["assists"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(away_ss["assists_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(away_ss["steals"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(away_ss["steals_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(away_ss["turnovers"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(away_ss["turnovers_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(away_ss["block_shots"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(away_ss["block_shots_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(away_ss["fouls_cm"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(away_ss["fouls_cm_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(away_ss["fouls_rv"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(away_ss["fouls_rv_pp"])), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, str(away_ss["efficience"]), 1, 0, "C", 0)
    #     self.pdf.cell(40, 20, self.locale_format(Decimal(away_ss["efficience_pp"])), 1, 0, "C", 0)

    def players_page(self, params):
        pss = self.dpg.away_pt_ss if params["destiny"] == params["home"] else self.dpg.home_pt_ss
        pas = self.dpg.players_away_as if params["destiny"] == params["home"] else self.dpg.players_home_as
        id_team = params["away"] if params["destiny"] == params["home"] else params["home"]
        if len(pss) != len(pas):
            raise Exception("PDFPreGame::players_page: El número de jugadoras en las estadísticas estándard no coincide con las avanzadas")
        for i in range(len(pss)):
            #print(f"Estadisticas estándar de {pss[i]['name']}, y estadisticas avanzadas de {pas[i]['name']}")
            self.create_page(f"Estadísticas estándar y avanzadas: {pss[i]['name'].title()}")
            self.players_page_stats(pss[i], pas[i])
            if params["competition"] == COMPETITIONS.LF1 or params["competition"] == COMPETITIONS.EUROLEAGUE \
                or params["competition"] == COMPETITIONS.EUROCUP:
                self.create_page(f"Carta de tiro: {pss[i]['name'].title()}")
                print(f"\tGenerating shotchart of player: {pss[i]['name']}")
                self.shot_chart_player(id_team, pss[i]["id_player_team"], pss[i]["tc_int"])

    def players_page_stats(self, stats, adv):
        #print(stats)
        #Tabla Estadísticas de tiro
        self.pdf.set_font("Arial", "B", 14)
        self.pdf.set_y(75)
        self.pdf.cell(self.pdf.get_string_width("Estadísticas de tiro totales") + 5, 15, "Estadísticas de tiro totales", "B: 1", 1, "L")
        #Cabecera
        self.pdf.set_font("Arial", "B", 10)
        self.pdf.set_y(100)
        self.pdf.set_fill_color(225, 225, 225)
        self.pdf.cell(40, 20, "T2PC", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "T2PI", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "T2P%", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "T3PC", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "T3PI", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "T3P%", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "TCC", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "TCI", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "TC%", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "TLC", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "TLI", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "TL%", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "PTOS", 1, 0, "C", 1)
        #Fila estadísticas
        self.pdf.set_font("Arial", "", 10)
        self.pdf.set_y(120)
        self.pdf.set_fill_color(225, 225, 225)
        self.pdf.cell(40, 20, str(stats["t2p_conv"]), 1, 0, "C", 0)
        self.pdf.cell(40, 20, str(stats["t2p_int"]), 1, 0, "C", 0)
        self.pdf.cell(40, 20, self.locale_format(Decimal(stats["t2p_percentage"])) + "%", 1, 0, "C", 0)
        self.pdf.cell(40, 20, str(stats["t3p_conv"]), 1, 0, "C", 0)
        self.pdf.cell(40, 20, str(stats["t3p_int"]), 1, 0, "C", 0)
        self.pdf.cell(40, 20, self.locale_format(Decimal(stats["t3p_percentage"])) + "%", 1, 0, "C", 0)
        self.pdf.cell(40, 20, str(stats["tc_conv"]), 1, 0, "C", 0)
        self.pdf.cell(40, 20, str(stats["tc_int"]), 1, 0, "C", 0)
        self.pdf.cell(40, 20, self.locale_format(Decimal(stats["tc_percentage"])), 1, 0, "C", 0)
        self.pdf.cell(40, 20, str(stats["tl_conv"]), 1, 0, "C", 0)
        self.pdf.cell(40, 20, str(stats["tl_int"]), 1, 0, "C", 0)
        self.pdf.cell(40, 20, self.locale_format(Decimal(stats["tl_percentage"])), 1, 0, "C", 0)
        self.pdf.cell(40, 20, str(stats["total_puntos"]), 1, 0, "C", 0)
        #Tabla Estadísticas de distribución de tiros
        self.pdf.set_font("Arial", "B", 14)
        self.pdf.set_xy(600, 75)
        self.pdf.cell(self.pdf.get_string_width("Distribución de puntos") + 5, 15, "Distribución de puntos", "B: 1", 1, "L")
        #Cabecera
        self.pdf.set_font("Arial", "B", 10)
        self.pdf.set_xy(600, 100)
        self.pdf.set_fill_color(225, 225, 225)
        self.pdf.cell(40, 20, "2P%", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "3P%", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "TL%", 1, 0, "C", 1)
        #Fila estadísticas
        self.pdf.set_font("Arial", "", 10)
        self.pdf.set_xy(600, 120)
        self.pdf.set_fill_color(225, 225, 225)
        self.pdf.cell(40, 20, self.locale_format(Decimal(stats["p_t2p_puntos"])) + "%", 1, 0, "C", 0)
        self.pdf.cell(40, 20, self.locale_format(Decimal(stats["p_t3p_puntos"])) + "%", 1, 0, "C", 0)
        self.pdf.cell(40, 20, self.locale_format(Decimal(stats["p_tl_puntos"])) + "%", 1, 0, "C", 0)
        #Tabla Estadísticas de distribución de tiros por partido
        self.pdf.set_font("Arial", "B", 14)
        self.pdf.set_y(155)
        self.pdf.cell(self.pdf.get_string_width("Distribución de tiros por partido") + 5, 15, "Distribución de tiros por partido", "B: 1", 1, "L")
        #Cabecera
        self.pdf.set_font("Arial", "B", 10)
        self.pdf.set_y(180)
        self.pdf.set_fill_color(225, 225, 225)
        self.pdf.cell(40, 20, "T2PC", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "T2PI", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "T2P%", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "T3PC", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "T3PI", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "T3P%", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "TCC", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "TCI", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "TC%", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "TLC", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "TLI", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "TL%", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "PTOS", 1, 0, "C", 1)
        #Fila estadísticas
        self.pdf.set_font("Arial", "", 10)
        self.pdf.set_y(200)
        self.pdf.set_fill_color(225, 225, 225)
        self.pdf.cell(40, 20, self.locale_format(stats["t2p_conv_pp"]), 1, 0, "C", 0)
        self.pdf.cell(40, 20, self.locale_format(stats["t2p_int_pp"]), 1, 0, "C", 0)
        self.pdf.cell(40, 20, self.locale_format(Decimal(stats["t2p_percentage"])) + "%", 1, 0, "C", 0)
        self.pdf.cell(40, 20, self.locale_format(stats["t3p_conv_pp"]), 1, 0, "C", 0)
        self.pdf.cell(40, 20, self.locale_format(stats["t3p_int_pp"]), 1, 0, "C", 0)
        self.pdf.cell(40, 20, self.locale_format(Decimal(stats["t3p_percentage"])) + "%", 1, 0, "C", 0)
        self.pdf.cell(40, 20, self.locale_format(stats["tc_conv_pp"]), 1, 0, "C", 0)
        self.pdf.cell(40, 20, self.locale_format(stats["tc_int_pp"]), 1, 0, "C", 0)
        self.pdf.cell(40, 20, self.locale_format(Decimal(stats["tc_percentage"])), 1, 0, "C", 0)
        self.pdf.cell(40, 20, self.locale_format(stats["tl_conv_pp"]), 1, 0, "C", 0)
        self.pdf.cell(40, 20, self.locale_format(stats["tl_int_pp"]), 1, 0, "C", 0)
        self.pdf.cell(40, 20, self.locale_format(Decimal(stats["tl_percentage"])), 1, 0, "C", 0)
        self.pdf.cell(40, 20, self.locale_format(stats["total_puntos_pp"]), 1, 0, "C", 0)
        #Estadísticas de tiro por partido
        self.pdf.set_font("Arial", "B", 14)
        self.pdf.set_y(240)
        self.pdf.cell(self.pdf.get_string_width("Estadísticas de rebote") + 5, 15, "Estadísticas de rebote", "B: 1", 1, "L")
        self.pdf.set_font("Arial", "B", 14)
        #Cabecera
        self.pdf.set_font("Arial", "B", 10)
        self.pdf.set_y(265)
        self.pdf.set_fill_color(225, 225, 225)
        self.pdf.cell(60, 20, "RD", 1, 0, "C", 1)
        self.pdf.cell(60, 20, "RD/P", 1, 0, "C", 1)
        self.pdf.cell(60, 20, "RO", 1, 0, "C", 1)
        self.pdf.cell(60, 20, "RO/P", 1, 0, "C", 1)
        self.pdf.cell(60, 20, "TR", 1, 0, "C", 1)
        self.pdf.cell(60, 20, "TR/P", 1, 0, "C", 1)
        self.pdf.cell(60, 20, "RD%", 1, 0, "C", 1)
        self.pdf.cell(60, 20, "RO%", 1, 0, "C", 1)
        self.pdf.cell(60, 20, "TR%", 1, 0, "C", 1)
        #Fila estadísticas
        self.pdf.set_y(285)
        self.pdf.set_font("Arial", "", 10)
        self.pdf.cell(60, 20, str(stats["reb_def"]), 1, 0, "C", 0)
        self.pdf.cell(60, 20, self.locale_format(Decimal(stats["reb_def_pp"])), 1, 0, "C", 0)
        self.pdf.cell(60, 20, str(stats["reb_of"]), 1, 0, "C", 0)
        self.pdf.cell(60, 20, self.locale_format(Decimal(stats["reb_of_pp"])), 1, 0, "C", 0)
        self.pdf.cell(60, 20, str(stats["total_rebs"]), 1, 0, "C", 0)
        self.pdf.cell(60, 20, self.locale_format(Decimal(stats["total_rebs_pp"])), 1, 0, "C", 0)
        self.pdf.cell(60, 20, self.locale_format(Decimal(adv["p_reb_def"])) + "%", 1, 0, "C", 0)
        self.pdf.cell(60, 20, self.locale_format(Decimal(adv["p_reb_of"])) + "%", 1, 0, "C", 0)
        self.pdf.cell(60, 20, self.locale_format(Decimal(adv["p_tot_reb"])) + "%", 1, 0, "C", 0)
        #Eficiencia
        self.pdf.set_font("Arial", "B", 14)
        self.pdf.set_y(320)
        self.pdf.cell(self.pdf.get_string_width("Eficiencia") + 5, 15, "Eficiencia", "B: 1", 1, "L")
        self.pdf.set_font("Arial", "B", 14)
        #Cabecera
        self.pdf.set_font("Arial", "B", 10)
        self.pdf.set_y(345)
        self.pdf.set_fill_color(225, 225, 225)
        self.pdf.cell(45, 20, "PPP", 1, 0, "C", 1)
        self.pdf.cell(45, 20, "PPI", 1, 0, "C", 1)
        self.pdf.cell(45, 20, "USG%", 1, 0, "C", 1)
        self.pdf.cell(45, 20, "eTC%", 1, 0, "C", 1)
        self.pdf.cell(45, 20, "TS%", 1, 0, "C", 1)
        self.pdf.cell(45, 20, "ORTG", 1, 0, "C", 1)
        self.pdf.cell(45, 20, "DRTG", 1, 0, "C", 1)
        self.pdf.cell(45, 20, "NRTG", 1, 0, "C", 1)
        #Fila estadísticas
        self.pdf.set_y(365)
        self.pdf.set_font("Arial", "", 10)
        self.pdf.cell(45, 20, self.locale_format(Decimal(stats["pointsbyposs"])), 1, 0, "C", 0)
        self.pdf.cell(45, 20, self.locale_format(Decimal(stats["ppa"])), 1, 0, "C", 0)
        self.pdf.cell(45, 20, self.locale_format(Decimal(adv["usg"])) + "%", 1, 0, "C", 0)
        self.pdf.cell(45, 20, self.locale_format(Decimal(adv["etc"])) + "%", 1, 0, "C", 0)
        self.pdf.cell(45, 20, self.locale_format(Decimal(adv["ts"])) + "%", 1, 0, "C", 0)
        self.pdf.cell(45, 20, self.locale_format(Decimal(adv["ortg"])), 1, 0, "C", 0)
        self.pdf.cell(45, 20, self.locale_format(Decimal(adv["drtg"])), 1, 0, "C", 0)
        self.pdf.cell(45, 20, self.locale_format(Decimal(adv["nrtg"])), 1, 0, "C", 0)
        #Otras estadísticas
        self.pdf.set_font("Arial", "B", 14)
        self.pdf.set_y(400)
        self.pdf.cell(self.pdf.get_string_width("Otras estadísticas totales y por partido") + 5, 15, "Otras estadísticas totales y por partido", "B: 1", 1, "L")
        self.pdf.set_font("Arial", "B", 14)
        #Cabecera
        self.pdf.set_font("Arial", "B", 10)
        self.pdf.set_y(425)
        self.pdf.set_fill_color(225, 225, 225)
        self.pdf.cell(35, 20, "AS", 1, 0, "C", 1)
        self.pdf.cell(35, 20, "AS/P", 1, 0, "C", 1)
        self.pdf.cell(35, 20, "BR", 1, 0, "C", 1)
        self.pdf.cell(35, 20, "BR/P", 1, 0, "C", 1)
        self.pdf.cell(35, 20, "BP", 1, 0, "C", 1)
        self.pdf.cell(35, 20, "BP/P", 1, 0, "C", 1)
        self.pdf.cell(35, 20, "TP", 1, 0, "C", 1)
        self.pdf.cell(35, 20, "TP/P", 1, 0, "C", 1)
        self.pdf.cell(35, 20, "FC", 1, 0, "C", 1)
        self.pdf.cell(35, 20, "FC/P", 1, 0, "C", 1)
        self.pdf.cell(35, 20, "FR", 1, 0, "C", 1)
        self.pdf.cell(35, 20, "FR/P", 1, 0, "C", 1)
        self.pdf.cell(35, 20, "VAL.", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "VAL./P", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "GS", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "DRE", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "AS%", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "AS/BP", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "AS.Rat.", 1, 0, "C", 1)
        self.pdf.cell(40, 20, "BR%", 1, 0, "C", 1)
        #Fila estadísticas
        self.pdf.set_y(445)
        self.pdf.set_font("Arial", "", 10)
        self.pdf.cell(35, 20, str(stats["assists"]), 1, 0, "C", 0)
        self.pdf.cell(35, 20, self.locale_format(Decimal(stats["assists_pp"])), 1, 0, "C", 0)
        self.pdf.cell(35, 20, str(stats["steals"]), 1, 0, "C", 0)
        self.pdf.cell(35, 20, self.locale_format(Decimal(stats["steals_pp"])), 1, 0, "C", 0)
        self.pdf.cell(35, 20, str(stats["turnovers"]), 1, 0, "C", 0)
        self.pdf.cell(35, 20, self.locale_format(Decimal(stats["turnovers_pp"])), 1, 0, "C", 0)
        self.pdf.cell(35, 20, str(stats["block_shots"]), 1, 0, "C", 0)
        self.pdf.cell(35, 20, self.locale_format(Decimal(stats["block_shots_pp"])), 1, 0, "C", 0)
        self.pdf.cell(35, 20, str(stats["fouls_cm"]), 1, 0, "C", 0)
        self.pdf.cell(35, 20, self.locale_format(Decimal(stats["fouls_cm_pp"])), 1, 0, "C", 0)
        self.pdf.cell(35, 20, str(stats["fouls_rv"]), 1, 0, "C", 0)
        self.pdf.cell(35, 20, self.locale_format(Decimal(stats["fouls_rv_pp"])), 1, 0, "C", 0)
        self.pdf.cell(35, 20, str(stats["efficience"]), 1, 0, "C", 0)
        self.pdf.cell(40, 20, self.locale_format(Decimal(stats["efficience_pp"])), 1, 0, "C", 0)
        self.pdf.cell(40, 20, self.locale_format(Decimal(adv["game_score"])), 1, 0, "C", 0)
        self.pdf.cell(40, 20, self.locale_format(Decimal(adv["dre"])), 1, 0, "C", 0)
        self.pdf.cell(40, 20, self.locale_format(Decimal(adv["p_assists"])) + "%", 1, 0, "C", 0)
        self.pdf.cell(40, 20, self.locale_format(Decimal(adv["assists_x_turnovers"])), 1, 0, "C", 0)
        self.pdf.cell(40, 20, self.locale_format(Decimal(adv["assists_ratio"])), 1, 0, "C", 0)
        self.pdf.cell(40, 20, self.locale_format(Decimal(adv["p_steals"])) + "%", 1, 0, "C", 0)

    def page_player_graphics(self):
        self.pdf.set_font("Arial", "B", 12)
        rival_players = self.dpg.away_pt_ss if self.params["destiny"] == self.params["home"] else self.dpg.home_pt_ss
        total_points = self.dpg.away_standard_stats[0]["total_puntos"] if self.params["destiny"] == self.params["home"] else self.dpg.home_standard_stats[0]["total_puntos"]
        labels = [player["name"] for player in rival_players]
        values = [round(Decimal(player["total_puntos"]/total_points*100), 2) for player in rival_players]
        file = str(self.params["home"]) + "." + str(self.params["away"]) + ".player.graphic.1" + IMAGES.EXTENSION
        barchart = BarChartPlot(labels, values, file, "Distribución de puntos por jugadora", "Porcentaje")
        barchart.save_file()
        #Resize de la imagen a un ancho determinado
        (width, height) = self.resize_image(IMAGES.IMAGE_ROUTE + file, 550)
        self.pdf.set_xy(PDFK.LANDSCAPE_A4_WIDTH/2 - width/2, 65)
        self.pdf.image(IMAGES.IMAGE_ROUTE + file, w=width, h=height)
        os.remove(IMAGES.IMAGE_ROUTE + file)
